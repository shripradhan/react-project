{"ast":null,"code":"import _objectSpread from \"D:/Shrikant/React Project Git Repository/vehisol-easy-garage-demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/Shrikant/React Project Git Repository/vehisol-easy-garage-demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"borderColor\", \"backgroundColor\", \"pointHoverBackgroundColor\", \"dataPoints\", \"label\", \"pointed\"];\n\nvar _jsxFileName = \"D:\\\\Shrikant\\\\React Project Git Repository\\\\vehisol-easy-garage-demo\\\\src\\\\views\\\\charts\\\\ChartLineSimple.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getColor, deepObjectsMerge } from '@coreui/utils';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChartLineSimple = function ChartLineSimple(props) {\n  var borderColor = props.borderColor,\n      backgroundColor = props.backgroundColor,\n      pointHoverBackgroundColor = props.pointHoverBackgroundColor,\n      dataPoints = props.dataPoints,\n      label = props.label,\n      pointed = props.pointed,\n      attributes = _objectWithoutProperties(props, _excluded);\n\n  var pointHoverColor = function () {\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor;\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor;\n    }\n\n    return borderColor;\n  }();\n\n  var defaultDatasets = function () {\n    return [{\n      data: dataPoints,\n      borderColor: getColor(borderColor),\n      backgroundColor: getColor(backgroundColor),\n      pointBackgroundColor: getColor(pointHoverColor),\n      pointHoverBackgroundColor: getColor(pointHoverColor),\n      label: label\n    }];\n  }();\n\n  var pointedOptions = function () {\n    return {\n      scales: {\n        xAxes: [{\n          offset: true,\n          gridLines: {\n            color: 'transparent',\n            zeroLineColor: 'transparent'\n          },\n          ticks: {\n            fontSize: 2,\n            fontColor: 'transparent'\n          }\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            display: false,\n            min: Math.min.apply(Math, dataPoints) - 5,\n            max: Math.max.apply(Math, dataPoints) + 5\n          }\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    };\n  }();\n\n  var straightOptions = function () {\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    };\n  }();\n\n  var defaultOptions = function () {\n    var options = pointed ? pointedOptions : straightOptions;\n    return Object.assign({}, options, {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      }\n    });\n  }();\n\n  var computedDatasets = function () {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {});\n  }();\n\n  var computedOptions = function () {\n    return deepObjectsMerge(defaultOptions, attributes.options || {});\n  }(); // render\n\n\n  return /*#__PURE__*/_jsxDEV(CChartLine, _objectSpread(_objectSpread({}, attributes), {}, {\n    datasets: computedDatasets,\n    options: computedOptions,\n    labels: label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ChartLineSimple;\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\nexport default ChartLineSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLineSimple\");","map":{"version":3,"names":["React","PropTypes","getColor","deepObjectsMerge","CChartLine","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","datasets","computedOptions","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"sources":["D:/Shrikant/React Project Git Repository/vehisol-easy-garage-demo/src/views/charts/ChartLineSimple.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}